var AppModule = angular.module("WashingModule.app", [ "ngRoute", "ui.bootstrap" ]);

AppModule.config([ "$routeProvider", function($routeProvider) {
    var routes = [ {
        url: "/login",
        templateUrl: "html/views/login.view.html"
    }, {
        url: "/home",
        templateUrl: "html/views/home.view.html"
    }, {
        url: "/invoice",
        templateUrl: "html/views/invoice.view.html"
    }, {
        url: "/invoice/create",
        templateUrl: "html/views/invoice/createInvoice.view.html"
    }, {
        url: "/invoice/edit",
        templateUrl: "html/views/invoice/editInvoice.view.html"
    }, {
        url: "/invoice/list",
        templateUrl: "html/views/invoice/listInvoice.view.html"
    }, {
        url: "/vehicle",
        templateUrl: "html/views/vehicle.view.html"
    }, {
        url: "/vehicle/create",
        templateUrl: "html/views/vehicle/createVehicle.view.html"
    }, {
        url: "/vehicle/edit",
        templateUrl: "html/views/vehicle/editVehicle.view.html"
    }, {
        url: "/vehicle/list",
        templateUrl: "html/views/vehicle/listVehicle.view.html"
    }, {
        url: "/customer",
        templateUrl: "html/views/customer.view.html"
    }, {
        url: "/customer/create",
        templateUrl: "html/views/customer/createCustomer.view.html"
    }, {
        url: "/customer/edit",
        templateUrl: "html/views/customer/editCustomer.view.html"
    }, {
        url: "/customer/list",
        templateUrl: "html/views/customer/listCustomer.view.html"
    } ];
    $routeProvider.otherwise({
        redirectTo: "/home"
    });
    angular.forEach(routes, function(route) {
        $routeProvider.when(route.url, route);
    });
} ]);

AppModule.run([ "$rootScope", "$location", "$authService", "$log", function($rootScope, $location, $authService, $log) {
    $rootScope.$on("$routeChangeStart", function(event, next, current) {
        $authService.getSession().then(function(result) {
            var auth = $authService.isAuthenticated();
            if (auth === false) {
                $location.path("/login");
            }
        });
    });
} ]);

AppModule.factory("SessionMapper", function() {
    var SessionMapper = function(data) {
        this.authenticated = false;
        this.uid = "";
        this.email = "";
        if (angular.isDefined(data)) {
            this.parse(data);
        }
    };
    SessionMapper.prototype.parse = function(data) {
        if (data) {
            var self = this;
            angular.forEach(data, function(value, key) {
                self[key] = value;
            });
        }
    };
    return SessionMapper;
});

AppModule.factory("$authService", [ "$http", "SessionMapper", "$q", "$log", function($http, SessionMapper, $q, $log) {
    var _modelSession = {
        authenticated: true
    };
    var _getSession = function() {
        var defered = $q.defer();
        $http.get("/php/session").success(function(res) {
            _modelSession = new SessionMapper(res);
            defered.resolve({
                email: _modelSession.email
            });
        }).error(function(res) {
            defered.reject({
                message: res
            });
        });
        return defered.promise;
    };
    var _loginIn = function(credentials) {
        var defered = $q.defer();
        $http.post("/php/login", credentials).success(function(res) {
            _modelSession = new SessionMapper(res);
            defered.resolve({
                email: _modelSession.email
            });
        }).error(function(res) {
            defered.reject({
                message: res.message
            });
        });
        return defered.promise;
    };
    var _logout = function() {
        var defered = $q.defer();
        $http.get("/php/logout").success(function(res) {
            _modelSession = new SessionMapper(res);
            defered.resolve(_modelSession.email);
        });
        return defered.promise;
    };
    var _signUp = function(credentials) {
        var defered = $q.defer();
        $http.post("/php/signUp", credentials).success(function(res) {
            defered.resolve(res);
        });
        return defered.promise;
    };
    var _isAuthenticated = function() {
        return _modelSession.authenticated;
    };
    var _getUserMail = function() {
        return _modelSession.email;
    };
    return {
        loginIn: _loginIn,
        logout: _logout,
        signUp: _signUp,
        isAuthenticated: _isAuthenticated,
        getUserMail: _getUserMail,
        getSession: _getSession
    };
} ]);

AppModule.constant("AUTH_EVENTS", {
    loginSuccess: "auth-login-success",
    loginFailed: "auth-login-failed",
    logoutSuccess: "auth-logout-success",
    sessionTimeout: "auth-session-timeout",
    notAuthenticated: "auth-not-authenticated",
    notAuthorized: "auth-not-authorized"
});

AppModule.constant("USER_ROLES", {
    all: "*",
    admin: "admin",
    editor: "editor",
    guest: "guest"
});

AppModule.service("Session", function() {
    this.create = function(sessionId, userId, userRole) {
        this.id = sessionId;
        this.userId = userId;
        this.userRole = userRole;
    };
    this.destroy = function() {
        this.id = null;
        this.userId = null;
        this.userRole = null;
    };
});

AppModule.factory("$start", [ "$q", "$authService", "$log", function($q, $authService, $log) {
    var defered = $q.defer();
    $authService.getSession().then(function(result) {
        $log.log("user logged: " + $authService.getUserMail());
        defered.resolve("ok");
    });
    return defered.promise;
} ]);

AppModule.controller("BodyHeaderController", [ "$scope", "$authService", "$log", "$location", function($scope, $authService, $log, $location) {
    $scope.authenticated = undefined;
    $scope.loading = false;
    $scope.user = "";
    $scope.$watch($authService.isAuthenticated, function(newValue, oldValue) {
        console.log(newValue);
        $log.log("watch auth");
        if (angular.isDefined(newValue)) {
            $scope.authenticated = newValue;
            if (newValue == true) {
                $scope.$watch($authService.getUserMail, function(newValue) {
                    $scope.user = $authService.getUserMail();
                    $log.log("watch user");
                });
            }
        }
    });
    $scope.goLogin = function() {
        $location.path("#/login");
    };
    $scope.logout = function() {
        $scope.loading = true;
        $authService.logout().then(function() {
            $scope.loading = false;
            $location.path("#/login");
        });
    };
} ]);

AppModule.controller("CreateInvoiceController", [ "$scope", "$log", function($scope, $log) {
    $scope.companies = [ {
        name: "sandroller",
        zip: "566"
    }, {
        name: "interieur caisse",
        zip: "566"
    }, {
        name: "interieur benne",
        zip: "566"
    }, {
        name: "exterieur benne",
        zip: "566"
    }, {
        name: "interieur remorque",
        zip: "566"
    }, {
        name: "prestruggle",
        zip: ""
    }, {
        name: "mirepoix",
        zip: "6789"
    }, {
        name: "montenegro",
        zip: ""
    }, {
        name: "sulpha",
        zip: ""
    }, {
        name: "cornfed",
        zip: "4567"
    }, {
        name: "nonjudicable",
        zip: ""
    }, {
        name: "amadan",
        zip: ""
    }, {
        name: "dilater",
        zip: ""
    }, {
        name: "parvenu",
        zip: ""
    }, {
        name: "hypothecating",
        zip: ""
    }, {
        name: "wollongong",
        zip: ""
    }, {
        name: "dupont",
        zip: ""
    }, {
        name: "rounder",
        zip: ""
    }, {
        name: "semihibernation",
        zip: "4567"
    }, {
        name: "asunci",
        zip: ""
    }, {
        name: "unissued",
        zip: ""
    }, {
        name: "goldcup",
        zip: ""
    }, {
        name: "nonexculpation",
        zip: ""
    }, {
        name: "administrable",
        zip: ""
    }, {
        name: "gregg",
        zip: ""
    }, {
        name: "uncolorable",
        zip: "3422"
    }, {
        name: "pseudoparalysis",
        zip: ""
    }, {
        name: "vitalizing",
        zip: ""
    }, {
        name: "nonhistoric",
        zip: ""
    }, {
        name: "theocratically",
        zip: ""
    }, {
        name: "peroxy",
        zip: ""
    }, {
        name: "nutcase",
        zip: ""
    }, {
        name: "pawnbroker",
        zip: ""
    }, {
        name: "civvy",
        zip: ""
    }, {
        name: "blankbook",
        zip: ""
    }, {
        name: "unapplausive",
        zip: ""
    }, {
        name: "reeler",
        zip: ""
    }, {
        name: "toffy",
        zip: ""
    }, {
        name: "recondite",
        zip: ""
    }, {
        name: "illinois",
        zip: ""
    }, {
        name: "fossarian",
        zip: ""
    }, {
        name: "rabblement",
        zip: ""
    }, {
        name: "unblurred",
        zip: ""
    }, {
        name: "broadloom",
        zip: ""
    }, {
        name: "peddlingly",
        zip: ""
    }, {
        name: "metastable",
        zip: ""
    }, {
        name: "kittyhawk",
        zip: ""
    }, {
        name: "bushpig",
        zip: ""
    }, {
        name: "unfitness",
        zip: ""
    }, {
        name: "arillate",
        zip: ""
    }, {
        name: "jockey",
        zip: ""
    }, {
        name: "bullpen",
        zip: ""
    }, {
        name: "nonsimulate",
        zip: ""
    } ];
    $scope.coordonnate = {
        address: "rue des printemps",
        zip: "60000",
        contry: "france"
    };
    $scope.value = "";
    $scope.onSelect = function($item, $model, $label) {
        $scope.item = $item;
    };
} ]);

AppModule.controller("HomeController", [ "$scope", "$authService", function($scope, $authService) {
    $scope.credentials = {
        username: "",
        password: ""
    };
    $scope.user = $authService.getUserMail();
} ]);

AppModule.controller("LoginController", [ "$scope", "$log", "$modal", "$authService", "$location", function($scope, $log, $modal, $authService, $location) {
    $scope.login = {
        email: "",
        password: ""
    };
    $scope.signupCredentials = {
        email: "",
        password: "",
        name: "",
        phone: "",
        address: ""
    };
    $scope.loginIn = function(credentials) {
        $authService.loginIn({
            user: credentials
        }).then(function(user) {
            $location.path("/home");
        });
    };
    $scope.signUp = function(credentials) {
        $authService.signUp({
            customer: credentials
        }).then(function(results) {});
    };
    $scope.logout = function() {
        $authService.logout().then(function(results) {});
    };
    $log.log("test log");
    $scope.openNewUserModal = function() {
        var modalInstance = $modal.open({
            templateUrl: "html/views/newUser.modal.html",
            controller: "NewUserModalController"
        });
        modalInstance.result.then(function(info) {}, function() {
            $log.info("Error create user request : " + new Date());
        });
    };
} ]);

AppModule.controller("NewUserModalController", [ "$scope", "$modalInstance", function($scope, $modalInstance) {
    $scope.credentials = {
        email: "",
        password: ""
    };
    $scope.ok = function() {
        $modalInstance.close("succes");
    };
    $scope.cancel = function() {
        $modalInstance.dismiss("cancel");
    };
} ]);